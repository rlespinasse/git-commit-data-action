name: Build
on: [push, pull_request]
jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Need to download all history in order
          # to make the tests work properly
          fetch-depth: 0
      - uses: docker://ffurrer/bats:latest
        with:
          args: "--recursive ."
      - name: Release this GitHub Action
        uses: rlespinasse/release-that@v1.x
        with:
          without-prefix: true

  os-test:
    runs-on: ${{ matrix.os  }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./
      - name: Output
        run: |
          echo "Get author info"
          echo " - ${{ env.GIT_COMMIT_AUTHOR }}"
          echo " - ${{ env.GIT_COMMIT_AUTHOR_NAME }}"
          echo " - ${{ env.GIT_COMMIT_AUTHOR_EMAIL }}"
          echo "Get committer info"
          echo " - ${{ env.GIT_COMMIT_COMMITTER }}"
          echo " - ${{ env.GIT_COMMIT_COMMITTER_NAME }}"
          echo " - ${{ env.GIT_COMMIT_COMMITTER_EMAIL }}"
          echo "Get message info"
          echo " - ${{ env.GIT_COMMIT_MESSAGE_SUBJECT }}"
          echo " - ${{ env.GIT_COMMIT_MESSAGE_SUBJECT_SANITIZED }}"
          echo " - ${{ env.GIT_COMMIT_MESSAGE_BODY }}"

  win-test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./
      - name: Output
        run: |
          echo "Get author info"
          echo " - $env:GIT_COMMIT_AUTHOR"
          echo " - $env:GIT_COMMIT_AUTHOR_NAME"
          echo " - $env:GIT_COMMIT_AUTHOR_EMAIL"
          echo "Get committer info"
          echo " - $env:GIT_COMMIT_COMMITTER"
          echo " - $env:GIT_COMMIT_COMMITTER_NAME"
          echo " - $env:GIT_COMMIT_COMMITTER_EMAIL"
          echo "Get message info"
          echo " - $env:GIT_COMMIT_MESSAGE_SUBJECT"
          echo " - $env:GIT_COMMIT_MESSAGE_SUBJECT_SANITIZED"
          echo " - $env:GIT_COMMIT_MESSAGE_BODY"
