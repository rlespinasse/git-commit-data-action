#!/bin/bash

TEMPLATE_SHA_FORMAT="%H"
TEMPLATE_SHORT_SHA_FORMAT="%h"

TEMPLATE_AUTHOR_FORMAT="%an <%ae>"
TEMPLATE_AUTHOR_NAME_FORMAT="%an"
TEMPLATE_AUTHOR_EMAIL_FORMAT="%ae"

TEMPLATE_COMMITTER_FORMAT="%cn <%ce>"
TEMPLATE_COMMITTER_NAME_FORMAT="%cn"
TEMPLATE_COMMITTER_EMAIL_FORMAT="%ce"

TEMPLATE_COMMIT_MESSAGE_SUBJECT_FORMAT="%s"
TEMPLATE_COMMIT_MESSAGE_SUBJECT_SANITIZED_FORMAT="%f"
TEMPLATE_COMMIT_MESSAGE_BODY_FORMAT="%b"

git_log_format() {
  pattern="$1"
  reference="$2"
  git log -1 --pretty=format:"$pattern" "$reference"
}

COMMIT_SHA=$(git_log_format "${TEMPLATE_SHA_FORMAT}" "HEAD")
COMMIT_SHORT_SHA=$(git_log_format "${TEMPLATE_SHORT_SHA_FORMAT}" "HEAD")
COMMIT_AUTHOR=$(git_log_format "${TEMPLATE_AUTHOR_FORMAT}" "HEAD")
COMMIT_AUTHOR_NAME=$(git_log_format "${TEMPLATE_AUTHOR_NAME_FORMAT}" "HEAD")
COMMIT_AUTHOR_EMAIL=$(git_log_format "${TEMPLATE_AUTHOR_EMAIL_FORMAT}" "HEAD")
COMMIT_COMMITTER=$(git_log_format "${TEMPLATE_COMMITTER_FORMAT}" "HEAD")
COMMIT_COMMITTER_NAME=$(git_log_format "${TEMPLATE_COMMITTER_NAME_FORMAT}" "HEAD")
COMMIT_COMMITTER_EMAIL=$(git_log_format "${TEMPLATE_COMMITTER_EMAIL_FORMAT}" "HEAD")
COMMIT_MESSAGE_SUBJECT=$(git_log_format "${TEMPLATE_COMMIT_MESSAGE_SUBJECT_FORMAT}" "HEAD")
COMMIT_MESSAGE_SUBJECT_SANITIZED=$(git_log_format "${TEMPLATE_COMMIT_MESSAGE_SUBJECT_SANITIZED_FORMAT}" "HEAD")
COMMIT_MESSAGE_BODY=$(git_log_format "${TEMPLATE_COMMIT_MESSAGE_BODY_FORMAT}" "HEAD")

  echo "GIT_COMMIT_SHA=${COMMIT_SHA}"
  echo "GIT_COMMIT_SHORT_SHA=${COMMIT_SHORT_SHA}"
  echo "GIT_COMMIT_AUTHOR=${COMMIT_AUTHOR}"
  echo "GIT_COMMIT_AUTHOR_NAME=${COMMIT_AUTHOR_NAME}"
  echo "GIT_COMMIT_AUTHOR_EMAIL=${COMMIT_AUTHOR_EMAIL}"
  echo "GIT_COMMIT_COMMITTER=${COMMIT_COMMITTER}"
  echo "GIT_COMMIT_COMMITTER_NAME=${COMMIT_COMMITTER_NAME}"
  echo "GIT_COMMIT_COMMITTER_EMAIL=${COMMIT_COMMITTER_EMAIL}"
  echo "GIT_COMMIT_MESSAGE_SUBJECT=${COMMIT_MESSAGE_SUBJECT}"
  echo "GIT_COMMIT_MESSAGE_SUBJECT_SANITIZED=${COMMIT_MESSAGE_SUBJECT_SANITIZED}"
  echo 'GIT_COMMIT_MESSAGE_BODY<<GIT_COMMIT_MESSAGE_BODY_EOF'
  echo "${COMMIT_MESSAGE_BODY}"
  echo 'GIT_COMMIT_MESSAGE_BODY_EOF'


if [ -f "$GITHUB_OUTPUT" ]; then
  {
    echo "sha=${COMMIT_SHA}"
    echo "short-sha=${COMMIT_SHORT_SHA}"
    echo "author=${COMMIT_AUTHOR}"
    echo "author-name=${COMMIT_AUTHOR_NAME}"
    echo "author-email=${COMMIT_AUTHOR_EMAIL}"
    echo "committer=${COMMIT_COMMITTER}"
    echo "committer_NAME=${COMMIT_COMMITTER_NAME}"
    echo "committer_EMAIL=${COMMIT_COMMITTER_EMAIL}"
    echo "message-subject=${COMMIT_MESSAGE_SUBJECT}"
    echo "message-subject-sanitized=${COMMIT_MESSAGE_SUBJECT_SANITIZED}"
    echo 'message-body<<GIT_COMMIT_MESSAGE_BODY_EOF'
    echo "${COMMIT_MESSAGE_BODY}"
    echo 'GIT_COMMIT_MESSAGE_BODY_EOF'
  } >> "$GITHUB_OUTPUT"
else
  echo "::set-output name=sha::${COMMIT_SHA}"
  echo "::set-output name=short-sha::${COMMIT_SHORT_SHA}"
  echo "::set-output name=author::${COMMIT_AUTHOR}"
  echo "::set-output name=author-name::${COMMIT_AUTHOR_NAME}"
  echo "::set-output name=author-email::${COMMIT_AUTHOR_EMAIL}"
  echo "::set-output name=committer::${COMMIT_COMMITTER}"
  echo "::set-output name=committer_NAME::${COMMIT_COMMITTER_NAME}"
  echo "::set-output name=committer_EMAIL::${COMMIT_COMMITTER_EMAIL}"
  echo "::set-output name=message-subject::${COMMIT_MESSAGE_SUBJECT}"
  echo "::set-output name=message-subject-sanitized::${COMMIT_MESSAGE_SUBJECT_SANITIZED}"
fi

if [ "${INPUT_PUBLISH_ENV}" == "true" ]; then
  {
    echo "GIT_COMMIT_SHA=${COMMIT_SHA}"
    echo "GIT_COMMIT_SHORT_SHA=${COMMIT_SHORT_SHA}"
    echo "GIT_COMMIT_AUTHOR=${COMMIT_AUTHOR}"
    echo "GIT_COMMIT_AUTHOR_NAME=${COMMIT_AUTHOR_NAME}"
    echo "GIT_COMMIT_AUTHOR_EMAIL=${COMMIT_AUTHOR_EMAIL}"
    echo "GIT_COMMIT_COMMITTER=${COMMIT_COMMITTER}"
    echo "GIT_COMMIT_COMMITTER_NAME=${COMMIT_COMMITTER_NAME}"
    echo "GIT_COMMIT_COMMITTER_EMAIL=${COMMIT_COMMITTER_EMAIL}"
    echo "GIT_COMMIT_MESSAGE_SUBJECT=${COMMIT_MESSAGE_SUBJECT}"
    echo "GIT_COMMIT_MESSAGE_SUBJECT_SANITIZED=${COMMIT_MESSAGE_SUBJECT_SANITIZED}"
    echo 'GIT_COMMIT_MESSAGE_BODY<<GIT_COMMIT_MESSAGE_BODY_EOF'
    echo "${COMMIT_MESSAGE_BODY}"
    echo 'GIT_COMMIT_MESSAGE_BODY_EOF'
  } >>"$GITHUB_ENV"
fi
